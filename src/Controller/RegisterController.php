<?phpnamespace MovieTracker\Controller;use MovieTracker\Model\User;use MovieTracker\Repository\UserRepository;class RegisterController implements Controller{    private UserRepository $userRepository;    public function __construct()    {        $this->userRepository = UserRepository::getSingleton();    }    public function processRequest(): void    {        if($_SERVER['REQUEST_METHOD'] == 'POST') {            $email = filter_input(INPUT_POST, "email", FILTER_VALIDATE_EMAIL);            if ($email) {                if (!($this->userRepository->findUserByEmail($email))) {                    $password = filter_input(INPUT_POST, "password");                    $passwordConfirm = filter_input(INPUT_POST, "password-confirmation");                    if ($password !== null && $passwordConfirm !== null && $password === $passwordConfirm) {                        $newUser = new User($email, $password);                        $saveResult = $this->userRepository->saveUser($newUser);                        if ($saveResult) {                            $_SESSION['email'] = $email;                            header('Location: /login');                            exit();                        } else {                            $errorMessage = 'Um erro interno aconteceu. Tente Novamente!';                        }                    } else {                        $errorMessage = 'As senhas não coincidem.';                    }                } else {                    $errorMessage = 'Impossível cadastrar para esse e-mail.';                }            } else {                $errorMessage = 'Endereço de e-mail inválido.';            }            $_SESSION['errorMessage'] = $errorMessage;        }        require_once __DIR__ . "/../../Views/register.php";    }}